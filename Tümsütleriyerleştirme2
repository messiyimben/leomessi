-- Yerel script
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- DraggableObjects içerisindeki tüm MilkContainer'ları bulma
local draggableObjects = workspace.DraggableObjects:GetChildren()

-- Truck referansları
local mediumLiquidTruck1 = workspace:WaitForChild("Equipment"):WaitForChild("MediumLiquidTruck")
local mediumLiquidTruck2 = workspace:WaitForChild("Equipment"):WaitForChild("MediumLiquidTruck2")

-- Truck'ların kapasite kontrolü (örneğin kapasiteyi bir 'Capacity' özelliğiyle kontrol edebilirsiniz)
local function isTruckFull(truck)
    return truck:FindFirstChild("Capacity") and truck.Capacity.Value >= truck.Capacity.MaxValue
end

-- Seçilecek truck
local truckToUse = mediumLiquidTruck1  -- Varsayılan olarak MediumLiquidTruck seçildi

-- MilkContainer'ları sırasıyla eline al ve remote event'leri çalıştır
for _, object in ipairs(draggableObjects) do
    if object.Name == "MilkContainer" and object:IsA("Model") then
        -- Nesneyi oyuncuya ışınlat
        object:SetPrimaryPartCFrame(character.HumanoidRootPart.CFrame)
        
        -- Remote Event ile nesneyi eline al
        local args = {
            [1] = object
        }
        game:GetService("ReplicatedStorage"):WaitForChild("_REMOTE_STORAGE"):WaitForChild("EVTRequestToCarry"):FireServer(unpack(args))
        
        -- Truck kapasitesini kontrol et ve doluysa diğer truck'a geçiş yap
        if isTruckFull(mediumLiquidTruck1) then
            truckToUse = mediumLiquidTruck2
        end
        
        -- Nesneyi taşıma işlemi
        local truckArgs = {
            [1] = truckToUse
        }
        game:GetService("ReplicatedStorage"):WaitForChild("_REMOTE_STORAGE"):WaitForChild("EVTFillLiquidCarrier"):FireServer(unpack(truckArgs))
        
        -- Burada nesnenin yok edilmesi gerekmiyor, sadece işlemleri yapıyoruz
    end
end
