-- Get all cows in the workspace
local cows = workspace:WaitForChild("Animals"):GetChildren()
-- Get both AutoCraftsmanBarn objects
local barns = workspace:WaitForChild("Buildings"):GetChildren()

-- Ensure we have exactly two barns
local autoCraftsmanBarns = {}
for _, barn in pairs(barns) do
    if barn:IsA("Model") and barn.Name == "AutoCraftsmanBarn" then
        table.insert(autoCraftsmanBarns, barn)
    end
end

-- Check if there are two barns
if #autoCraftsmanBarns ~= 2 then
    warn("Expected exactly two AutoCraftsmanBarn models")
    return
end

-- Loop through all cows and send herd request
for _, cow in pairs(cows) do
    if cow:IsA("Model") and cow.Name == "Cow" then
        -- Create the argument list for the current cow
        local args = {
            [1] = { cow }, -- Pass the current cow
            [2] = autoCraftsmanBarns[(math.random(1, 2))] -- Randomly pick one barn
        }

        -- Fire the server event for each cow
        game:GetService("ReplicatedStorage"):WaitForChild("_REMOTE_STORAGE"):WaitForChild("EVTHerdRequest"):FireServer(unpack(args))
        
        -- Add a slight delay before processing the next cow
        wait(0.5)  -- Adjust the delay as needed
    end
end

-- Define the truck positions and rotation
local firstTruckPosition = Vector3.new(-362, 6, 712)
local secondTruckPosition = Vector3.new(-359, 6, 793)
local rotation90Degrees = CFrame.Angles(0, math.rad(90), 0)  -- 90-degree rotation

-- Get the trucks
local firstTruck = workspace.Equipment.MediumLiquidTruck
local secondTruck = workspace.Equipment:GetChildren()[20]  -- Assuming second truck is the 20th item

-- Function to teleport a vehicle
local function teleportVehicle(vehicle, targetPosition)
    vehicle:SetPrimaryPartCFrame(CFrame.new(targetPosition) * rotation90Degrees)
end

-- Teleport the first truck
teleportVehicle(firstTruck, firstTruckPosition)

-- Add a delay before teleporting the second truck
wait(1)  -- Adjust the delay as needed

-- Teleport the second truck
teleportVehicle(secondTruck, secondTruckPosition)
